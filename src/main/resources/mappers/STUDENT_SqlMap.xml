<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="STUDENT" >
  <resultMap id="BaseResultMap" class="com.demo.model.Student" >
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" typeHandler="com.demo.common.SexEnumTypeHandler" />
    <result column="AGE" property="age" jdbcType="DECIMAL" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="TIMESTAMP" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="STUDENT.Pagination_Head" >
    <dynamic >
      <isNotEmpty property="firstResult" >
        <isNotEmpty property="lastResult" >
          <![CDATA[select * from ( select row_.*, rownum rownum_ from ( ]]>
        </isNotEmpty>
      </isNotEmpty>
    </dynamic>
  </sql>
  
  <sql id="STUDENT.Pagination_Tail" >
    <dynamic >
      <isNotEmpty property="firstResult" >
        <isNotEmpty property="lastResult" >
          <![CDATA[) row_ where rownum <= #lastResult# ) where rownum_ > #firstResult#]]>
        </isNotEmpty>
      </isNotEmpty>
    </dynamic>
  </sql>
  
  <sql id="STUDENT.Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].sexCriteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].sexCriteriaWithSingleValue[].condition$ #oredCriteria[].sexCriteriaWithSingleValue[].value,handler=com.demo.common.SexEnumTypeHandler#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].sexCriteriaWithListValue" conjunction="and" >
          $oredCriteria[].sexCriteriaWithListValue[].condition$
          <iterate property="oredCriteria[].sexCriteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].sexCriteriaWithListValue[].values[],handler=com.demo.common.SexEnumTypeHandler#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].sexCriteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].sexCriteriaWithBetweenValue[].condition$
          #oredCriteria[].sexCriteriaWithBetweenValue[].values[0],handler=com.demo.common.SexEnumTypeHandler# and
          #oredCriteria[].sexCriteriaWithBetweenValue[].values[1],handler=com.demo.common.SexEnumTypeHandler#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  
  <sql id="STUDENT.Base_Column_List" >
    ID, NAME, SEX, AGE, ADDRESS, BIRTHDAY, EMAIL
  </sql>
  
  <select id="STUDENT.selectByExample" resultMap="BaseResultMap" parameterClass="com.demo.model.StudentExample" >
    <include refid="STUDENT.Pagination_Head" />
    select
    <isParameterPresent >
      <isEqual property="distinct" compareValue="true" >
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="STUDENT.Base_Column_List" />
    from STUDENT
    <isParameterPresent >
      <include refid="STUDENT.Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
    <include refid="STUDENT.Pagination_Tail" />
  </select>
  
  <select id="STUDENT.selectByPrimaryKey" resultMap="BaseResultMap" parameterClass="com.demo.model.Student" >
    select 
    <include refid="STUDENT.Base_Column_List" />
    from STUDENT
    where ID = #id:DECIMAL#
  </select>
  
  <delete id="STUDENT.deleteByPrimaryKey" parameterClass="com.demo.model.Student" >
    delete from STUDENT
    where ID = #id:DECIMAL#
  </delete>
  
  <delete id="STUDENT.deleteByExample" parameterClass="com.demo.model.StudentExample" >
    delete from STUDENT
    <include refid="STUDENT.Example_Where_Clause" />
  </delete>
  
  <insert id="STUDENT.insert" parameterClass="com.demo.model.Student" >
    <selectKey resultClass="java.math.BigDecimal" keyProperty="id" >
      SELECT SEQ_STUDENT.NEXTVAL FROM DUAL AS id
    </selectKey>
    insert into STUDENT (ID, NAME, SEX, 
      AGE, ADDRESS, BIRTHDAY, EMAIL)
    values (#id:DECIMAL#, #name:VARCHAR#, #sex,jdbcType=VARCHAR,handler=com.demo.common.SexEnumTypeHandler#, 
      #age:DECIMAL#, #address:VARCHAR#, #birthday:TIMESTAMP#, #email:VARCHAR#)
  </insert>
  
  <insert id="STUDENT.insertSelective" parameterClass="com.demo.model.Student" >
    <selectKey resultClass="java.math.BigDecimal" keyProperty="id" >
      SELECT SEQ_STUDENT.NEXTVAL FROM DUAL AS id
    </selectKey>
    insert into STUDENT
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        ID
      </isNotNull>
      <isNotNull prepend="," property="name" >
        NAME
      </isNotNull>
      <isNotNull prepend="," property="sex" >
        SEX
      </isNotNull>
      <isNotNull prepend="," property="age" >
        AGE
      </isNotNull>
      <isNotNull prepend="," property="address" >
        ADDRESS
      </isNotNull>
      <isNotNull prepend="," property="birthday" >
        BIRTHDAY
      </isNotNull>
      <isNotNull prepend="," property="email" >
        EMAIL
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="name" >
        #name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="sex" >
        #sex,jdbcType=VARCHAR,handler=com.demo.common.SexEnumTypeHandler#
      </isNotNull>
      <isNotNull prepend="," property="age" >
        #age:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="address" >
        #address:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="birthday" >
        #birthday:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="email" >
        #email:VARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  
  <select id="STUDENT.countByExample" parameterClass="com.demo.model.StudentExample" resultClass="java.lang.Integer" >
    select count(*) from STUDENT
    <include refid="STUDENT.Example_Where_Clause" />
  </select>
  
  <update id="STUDENT.updateByExampleSelective" >
    update STUDENT
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        ID = #record.id:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.name" >
        NAME = #record.name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.sex" >
        SEX = #record.sex,jdbcType=VARCHAR,handler=com.demo.common.SexEnumTypeHandler#
      </isNotNull>
      <isNotNull prepend="," property="record.age" >
        AGE = #record.age:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.address" >
        ADDRESS = #record.address:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.birthday" >
        BIRTHDAY = #record.birthday:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.email" >
        EMAIL = #record.email:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="STUDENT.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  
  <update id="STUDENT.updateByExample" >
    update STUDENT
    set ID = #record.id:DECIMAL#,
      NAME = #record.name:VARCHAR#,
      SEX = #record.sex,jdbcType=VARCHAR,handler=com.demo.common.SexEnumTypeHandler#,
      AGE = #record.age:DECIMAL#,
      ADDRESS = #record.address:VARCHAR#,
      BIRTHDAY = #record.birthday:TIMESTAMP#,
      EMAIL = #record.email:VARCHAR#
    <isParameterPresent >
      <include refid="STUDENT.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  
  <update id="STUDENT.updateByPrimaryKeySelective" parameterClass="com.demo.model.Student" >
    update STUDENT
    <dynamic prepend="set" >
      <isNotNull prepend="," property="name" >
        NAME = #name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="sex" >
        SEX = #sex,jdbcType=VARCHAR,handler=com.demo.common.SexEnumTypeHandler#
      </isNotNull>
      <isNotNull prepend="," property="age" >
        AGE = #age:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="address" >
        ADDRESS = #address:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="birthday" >
        BIRTHDAY = #birthday:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="email" >
        EMAIL = #email:VARCHAR#
      </isNotNull>
    </dynamic>
    where ID = #id:DECIMAL#
  </update>
  
  <update id="STUDENT.updateByPrimaryKey" parameterClass="com.demo.model.Student" >
    update STUDENT
    set NAME = #name:VARCHAR#,
      SEX = #sex,jdbcType=VARCHAR,handler=com.demo.common.SexEnumTypeHandler#,
      AGE = #age:DECIMAL#,
      ADDRESS = #address:VARCHAR#,
      BIRTHDAY = #birthday:TIMESTAMP#,
      EMAIL = #email:VARCHAR#
    where ID = #id:DECIMAL#
  </update>
  
</sqlMap>
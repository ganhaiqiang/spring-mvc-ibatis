<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="login_user_info" >
  <resultMap id="BaseResultMap" class="com.demo.model.LoginUserInfo" >
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="VARCHAR" />
    <result column="creat_date" property="creatDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="login_user_info.mysql_Pagination_Limit" >
    <dynamic >
      <isNotEmpty property="mysqlOffset" >
        <isNotEmpty property="mysqlLength" >
          <![CDATA[ limit #mysqlOffset# , #mysqlLength# ]]>
        </isNotEmpty>
      </isNotEmpty>
    </dynamic>
  </sql>
  
  <sql id="login_user_info.Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  
  <sql id="login_user_info.Base_Column_List" >
    user_id, login_name, user_name, password, account_type, creat_date
  </sql>
  
  <select id="login_user_info.selectByExample" resultMap="BaseResultMap" parameterClass="com.demo.model.LoginUserInfoExample" >
    select
    <isParameterPresent >
      <isEqual property="distinct" compareValue="true" >
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="login_user_info.Base_Column_List" />
    from login_user_info
    <isParameterPresent >
      <include refid="login_user_info.Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
    <include refid="login_user_info.mysql_Pagination_Limit" />
  </select>
  
  <select id="login_user_info.selectByPrimaryKey" resultMap="BaseResultMap" parameterClass="com.demo.model.LoginUserInfo" >
    select 
    <include refid="login_user_info.Base_Column_List" />
    from login_user_info
    where user_id = #userId:VARCHAR#
  </select>
  
  <delete id="login_user_info.deleteByPrimaryKey" parameterClass="com.demo.model.LoginUserInfo" >
    delete from login_user_info
    where user_id = #userId:VARCHAR#
  </delete>
  
  <delete id="login_user_info.deleteByExample" parameterClass="com.demo.model.LoginUserInfoExample" >
    delete from login_user_info
    <include refid="login_user_info.Example_Where_Clause" />
  </delete>
  
  <insert id="login_user_info.insert" parameterClass="com.demo.model.LoginUserInfo" >
    insert into login_user_info (user_id, login_name, user_name, password, 
      account_type, creat_date)
    values (#userId:VARCHAR#, #loginName:VARCHAR#, #userName:VARCHAR#, #password:VARCHAR#, 
      #accountType:VARCHAR#, #creatDate:TIMESTAMP#)
  </insert>
  
  <insert id="login_user_info.insertSelective" parameterClass="com.demo.model.LoginUserInfo" >
    insert into login_user_info
    <dynamic prepend="(" >
      <isNotNull prepend="," property="userId" >
        user_id
      </isNotNull>
      <isNotNull prepend="," property="loginName" >
        login_name
      </isNotNull>
      <isNotNull prepend="," property="userName" >
        user_name
      </isNotNull>
      <isNotNull prepend="," property="password" >
        password
      </isNotNull>
      <isNotNull prepend="," property="accountType" >
        account_type
      </isNotNull>
      <isNotNull prepend="," property="creatDate" >
        creat_date
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="userId" >
        #userId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="loginName" >
        #loginName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="userName" >
        #userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="password" >
        #password:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="accountType" >
        #accountType:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="creatDate" >
        #creatDate:TIMESTAMP#
      </isNotNull>
      )
    </dynamic>
  </insert>
  
  <select id="login_user_info.countByExample" parameterClass="com.demo.model.LoginUserInfoExample" resultClass="java.lang.Integer" >
    select count(*) from login_user_info
    <include refid="login_user_info.Example_Where_Clause" />
  </select>
  
  <update id="login_user_info.updateByExampleSelective" >
    update login_user_info
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.userId" >
        user_id = #record.userId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.loginName" >
        login_name = #record.loginName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.userName" >
        user_name = #record.userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.password" >
        password = #record.password:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.accountType" >
        account_type = #record.accountType:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.creatDate" >
        creat_date = #record.creatDate:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="login_user_info.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  
  <update id="login_user_info.updateByExample" >
    update login_user_info
    set user_id = #record.userId:VARCHAR#,
      login_name = #record.loginName:VARCHAR#,
      user_name = #record.userName:VARCHAR#,
      password = #record.password:VARCHAR#,
      account_type = #record.accountType:VARCHAR#,
      creat_date = #record.creatDate:TIMESTAMP#
    <isParameterPresent >
      <include refid="login_user_info.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  
  <update id="login_user_info.updateByPrimaryKeySelective" parameterClass="com.demo.model.LoginUserInfo" >
    update login_user_info
    <dynamic prepend="set" >
      <isNotNull prepend="," property="loginName" >
        login_name = #loginName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="userName" >
        user_name = #userName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="password" >
        password = #password:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="accountType" >
        account_type = #accountType:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="creatDate" >
        creat_date = #creatDate:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where user_id = #userId:VARCHAR#
  </update>
  
  <update id="login_user_info.updateByPrimaryKey" parameterClass="com.demo.model.LoginUserInfo" >
    update login_user_info
    set login_name = #loginName:VARCHAR#,
      user_name = #userName:VARCHAR#,
      password = #password:VARCHAR#,
      account_type = #accountType:VARCHAR#,
      creat_date = #creatDate:TIMESTAMP#
    where user_id = #userId:VARCHAR#
  </update>
  
  
</sqlMap>